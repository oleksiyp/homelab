apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "backend.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "kubernetes,kubernetes-secret{{- range $key, $value := .Values.profiles }}{{- printf ",%s" $key -}}{{- end }}"
            - name: SPRING_CLOUD_APPLICATION_GUID
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.uid
            - name: JAVA_TOOL_OPTIONS
              value: {{ get (tpl (.Files.Get "files/opts.yaml.gotmpl") $ | fromYaml) "javaToolOptions" | join " " | quote }}
          {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value }}
          {{- end }}
          {{- range $key, $value := .Values.envFrom }}
            - name: {{ $key | quote }}
              valueFrom:
                {{ $value | toYaml | nindent 16 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
              protocol: TCP
          {{- if .Values.debug.enabled }}
            - name: debug
              containerPort: {{ .Values.debug.port }}
              protocol: TCP
          {{- else }}
          livenessProbe:
            {{- merge (tpl (.Files.Get "files/probe.yaml.gotmpl") . | fromYaml) .Values.livenessProbe | toYaml | nindent 12 }}
          readinessProbe:
            {{- merge (tpl (.Files.Get "files/probe.yaml.gotmpl") . | fromYaml) .Values.readinessProbe | toYaml | nindent 12 }}
          startupProbe:
            {{- merge (tpl (.Files.Get "files/probe.yaml.gotmpl") . | fromYaml) .Values.startupProbe | toYaml | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: properties
              mountPath: /app/config/application-kubernetes.yaml
              subPath: application-kubernetes.yaml
            - name: secret-properties
              mountPath: /app/config/application-kubernetes-secret.yaml
              subPath: application-kubernetes-secret.yaml
          {{- with .Values.tls }}
          {{- if .enabled }}
            {{- if or .keystore.issuerRef.name .keystore.secretRef.name }}
            - name: tls
              mountPath: /app/config/tls
            {{- end -}}
          {{- end -}}
          {{- if .truststore.ref.name }}
            - name: trust
              mountPath: /app/config/trust
          {{- end -}}
          {{- end -}}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: properties
          configMap:
            name: {{ include "backend.fullname" . }}
        - name: secret-properties
          secret:
            secretName: {{ include "backend.fullname" . }}
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
            medium: "Memory"
        {{- with .Values.tls }}
        {{- if .enabled }}
        {{- if .keystore.issuerRef.name }}
        - name: tls
          secret:
            secretName: {{ include "backend.fullname" $ }}-tls
        {{- else if .keystore.secretRef.name }}
        - name: tls
          secret:
            secretName: {{ .keystore.secretRef.name }}
        {{- end -}}
        {{- end -}}
        {{- if .truststore.ref.name }}
        {{- if eq .truststore.ref.kind "Secret" }}
        - name: trust
          secret:
            secretName: {{ .truststore.ref.name }}
        {{- else if eq .truststore.ref.kind "ConfigMap" }}
        - name: trust
          configMap:
            name: {{ .truststore.ref.name }}
        {{- else -}}
          {{- fail (printf "unknown .Values.tls.truststore.ref.kind=%s" .truststore.ref.kind) }}
        {{- end -}}
        {{- end -}}
        {{- end -}}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
